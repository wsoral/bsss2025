---
title: "Class 2"
format:
  revealjs:
    theme: solarized
editor: visual
---

```{r}
library(tidyverse)
theme_set(theme_classic())
```

# Bayesian updating


## Vampire detector problem

-   Suppose you have build a perfect detector of vampires.
-   You start examining randomly encountered people.
-   You have obtained a sample of 10 independent records.
-   Vampire, Human, Human, Vampire, Human, Human, Human, Human, Human, Human

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"),fun = function(x) dbeta(x, 1,1), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 2,1), size=1.1)+
  ggtitle("Observations: V")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 2,1), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 2,2), size=1.1)+
  ggtitle("Observations: V H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 2,2), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 2,3), size=1.1)+
  ggtitle("Observations: V H H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 2,3), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 3,3), size=1.1)+
  ggtitle("Observations: V H H V")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 3,3), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 3,4), size=1.1)+
  ggtitle("Observations: V H H V H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 3,4), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 3,5), size=1.1)+
  ggtitle("Observations: V H H V H H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 3,5), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 3,6), size=1.1)+
  ggtitle("Observations: V H H V H H H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 3,6), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 3,7), size=1.1)+
  ggtitle("Observations: V H H V H H H H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 3,7), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 3,8), size=1.1)+
  ggtitle("Observations: V H H V H H H H H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```

## Bayesian updating

```{r}
ggplot(data.frame(p = seq(0,1, length.out = 100)), aes(x=p))+
  stat_function(aes(linetype = "prior"), fun = function(x) dbeta(x, 3,8), size=1.1)+
  stat_function(aes(linetype = "posterior"), fun = function(x) dbeta(x, 3,9), size=1.1)+
  ggtitle("Observations: V H H V H H H H H H")+
  labs(y="Plausibility",x="Proportion of vampires")+
  theme(axis.text.y = element_blank(),
        legend.title = element_blank())
```


# Beta-Binomial model

## Binomial distribution - likelihood

$$
\mathcal{B}(n, p) = \binom{n}{k}p^y(1 - p)^{n - k}
$$

- $n$ - number of trials
- $k$ - number of successes
- $p$ - probability in each trial

## Binomial distribution - likelihood

```{r}
n_trials = 20
k_success = 13
p_grid = seq(0, 1, length.out = 40)
prob_nk = dbinom(k_success, n_trials, p_grid)

tibble(p_grid, prob_nk) %>% 
ggplot(aes(p_grid, prob_nk))+
  geom_line()+
  labs(title = "Likelihood given 13 successes across 20 trials",
       y = "Likelihood", x = "Probability in a single trial")
```

## Beta distribution - prior

$$
\mathcal{Beta}(\alpha, \beta) = \frac{\Gamma(\alpha + \beta)}{\Gamma(\alpha)\Gamma(\beta)}p^{\alpha-1}(1 - p)^{\beta - 1}
$$

- $\alpha > 0$ - shape parameter 1
- $\beta > 0$ - shape parameter 2
- $p$ - probability in each trial


## Beta distribution - prior

```{r}
alpha = 1
beta = 1
p_grid = seq(0, 1, length.out = 40)
prob_beta = dbeta(p_grid, alpha, beta)

tibble(p_grid, prob_beta) %>% 
ggplot(aes(p_grid, prob_beta))+
  geom_line()+
  ggtitle(expression("Prior: Beta given"~alpha~" = 1 and"~beta~" = 1"))+
  labs(
       y = "Prior", x = "Probability in a single trial")
```

## Posterior

$$
Posterior \approx Likelihood \times Prior
$$

## Posterior

$$
Posterior \approx \mathcal{B}(n,\ p) \times \mathcal{Beta}(\alpha,\ \beta)
$$

## Posterior

$$
Posterior\\ \approx \left[\binom{n}{k}p^y(1 - p)^{n - k}\right] \times \left[\frac{\Gamma(\alpha + \beta)}{\Gamma(\alpha)\Gamma(\beta)}p^{\alpha-1}(1 - p)^{\beta - 1}\right]
$$

## Posterior

$$
Posterior = \frac{Likelihood \times Prior}{Marginal\ Likelihood}
$$

## Posterior

$$
P(\theta | \mathcal{D}) = \frac{P(\mathcal{D} | \theta)\times P(\mathcal{D} | \theta)}{\int{P(\mathcal{D} | \theta)\times P(\mathcal{D} | \theta)}d\theta}
$$

- We need to use integral in the denominator part, because we want posterior to behave like a probability function, which should sum to 1.


## Posterior

$$
Marginal\ Likelihood\\ = \int\left[\binom{n}{k}p^y(1 - p)^{n - k}\right] \times \left[\frac{\Gamma(\alpha + \beta)}{\Gamma(\alpha)\Gamma(\beta)}p^{\alpha-1}(1 - p)^{\beta - 1}\right]dp\\ = some\ constant\ value
$$

- Because Beta distribution is a **conjugate prior** with respect to the Binomial distribution, solving this integral numerically is possible.


## Beta distribution - posterior

$$
Posterior\\ =  \frac{\Gamma(n + \alpha + \beta)}{\Gamma(k + \alpha)\Gamma(n - k + \beta)}p^{(k + \alpha)-1}(1 - p)^{(n - k + \beta) - 1}\\ = \mathcal{Beta}(k + \alpha,\ n - k + \beta)
$$



## Beta distribution - posterior

```{r}
p_grid = seq(0, 1, length.out = 40)
posterior = dbeta(p_grid, alpha+k_success, n_trials - k_success + beta)

tibble(p_grid, prob_beta, posterior) %>% 
ggplot(aes(p_grid))+
  geom_line(aes(y=prob_beta, linetype="Prior"))+
  geom_line(aes(y=posterior, linetype="Posterior"))+
  ggtitle(expression("Posterior Beta given"~alpha~" = 13 + 1 and"~beta~" = 20 - 13 + 1"))+
  labs(
       y = "Posterior", x = "Probability in a single trial")+
  theme(legend.title = element_blank(),
        legend.position = "bottom")
```

# Bayes factor

## Savage-Dickey density ratio

```{r}
sddr = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)/dbeta(0.5, alpha, beta)
tibble(p_grid, prob_beta, posterior) %>% 
ggplot(aes(p_grid))+
  geom_line(aes(y=prob_beta, linetype="Prior"))+
  geom_line(aes(y=posterior, linetype="Posterior"))+
  geom_point(aes(x = 0.5, y = dbeta(0.5, alpha, beta)), size = 4)+
  geom_point(aes(x = 0.5, y = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), size=4)+
  geom_segment(aes(x=0.5, xend=0.5, y=dbeta(0.5, alpha, beta), yend = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), linetype=2)+
  ggtitle(paste0("Savage-Dickey density ratio = ", round(sddr, 2)))+
  labs(
       y = "Posterior", x = "Probability in a single trial")+
  theme(legend.title = element_blank(),
        legend.position = "bottom")
```

## Savage-Dickey density ratio

- If we define the null hypothesis $H_0 = 0.5$ and alternative hypothesis as $H_1 \neq 0.5$
- Savage-Dickey density ratio will be approximate to the Bayes factor $BF_{01}$ in support of the null
- It will inform us how much we should update our belief in one hypothesis after observing the data.

# Types of prior

## Strength of prior evidence

- uninformative prior
- weakly informative prior
- informative prior

## Uninformative prior

```{r}
sddr = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)/dbeta(0.5, alpha, beta)
tibble(p_grid, prob_beta, posterior) %>% 
ggplot(aes(p_grid))+
  geom_line(aes(y=prob_beta, linetype="Prior"))+
  geom_line(aes(y=posterior, linetype="Posterior"))+
  geom_point(aes(x = 0.5, y = dbeta(0.5, alpha, beta)), size = 4)+
  geom_point(aes(x = 0.5, y = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), size=4)+
  geom_segment(aes(x=0.5, xend=0.5, y=dbeta(0.5, alpha, beta), yend = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), linetype=2)+
  ggtitle(paste0("Savage-Dickey density ratio = ", round(sddr, 2)),
          subtitle = "Uninformative prior: Beta(1, 1)")+
  labs(
       y = "Posterior", x = "Probability in a single trial")+
  theme(legend.title = element_blank(),
        legend.position = "bottom")
```

## Weakly informative prior

```{r}
alpha = 2
beta = 2
prob_beta = dbeta(p_grid, alpha, beta)
posterior = dbeta(p_grid, alpha+k_success, n_trials - k_success + beta)
sddr = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)/dbeta(0.5, alpha, beta)
tibble(p_grid, prob_beta, posterior) %>% 
ggplot(aes(p_grid))+
  geom_line(aes(y=prob_beta, linetype="Prior"))+
  geom_line(aes(y=posterior, linetype="Posterior"))+
  geom_point(aes(x = 0.5, y = dbeta(0.5, alpha, beta)), size = 4)+
  geom_point(aes(x = 0.5, y = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), size=4)+
  geom_segment(aes(x=0.5, xend=0.5, y=dbeta(0.5, alpha, beta), yend = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), linetype=2)+
  ggtitle(paste0("Savage-Dickey density ratio = ", round(sddr, 2)),
          subtitle = "Weakly informative prior: Beta(2, 2)")+
  labs(
       y = "Posterior", x = "Probability in a single trial")+
  theme(legend.title = element_blank(),
        legend.position = "bottom")
```


## Informative prior

```{r}
alpha = 20
beta = 20
prob_beta = dbeta(p_grid, alpha, beta)
posterior = dbeta(p_grid, alpha+k_success, n_trials - k_success + beta)
sddr = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)/dbeta(0.5, alpha, beta)
tibble(p_grid, prob_beta, posterior) %>% 
ggplot(aes(p_grid))+
  geom_line(aes(y=prob_beta, linetype="Prior"))+
  geom_line(aes(y=posterior, linetype="Posterior"))+
  geom_point(aes(x = 0.5, y = dbeta(0.5, alpha, beta)), size = 4)+
  geom_point(aes(x = 0.5, y = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), size=4)+
  geom_segment(aes(x=0.5, xend=0.5, y=dbeta(0.5, alpha, beta), yend = dbeta(0.5, k_success+alpha, n_trials-k_success+beta)), linetype=2)+
  ggtitle(paste0("Savage-Dickey density ratio = ", round(sddr, 2)),
          subtitle = "Weakly informative prior: Beta(20, 20)")+
  labs(
       y = "Posterior", x = "Probability in a single trial")+
  theme(legend.title = element_blank(),
        legend.position = "bottom")
```

## Informative priors - sources of information

- previous studies, published work
- researcher intuition
- interviewing substantive experts
- convenience through conjugacy
- nonparametrics oand other data derived sources
