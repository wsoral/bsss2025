---
title: "notebook7"
format: html
---

```{r}
library(tidyverse)
library(brms) 
library(bayestestR)
```

### Loading Data

Run this code only if you haven't already loaded the data from `notebook6.qmd`. If you are continuing from that notebook, you can skip this step.

```{r}
vacc <- read.csv2("data_files/exp_vaccines.csv")

my_scale <- function(x){
  (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE)
}
vacc <- vacc %>%
  mutate(zAge = my_scale(age),
         zVacc = my_scale(vaccination))


options(contrasts = c("contr.sum", "contr.poly"))
```

### Fitting a Model Without an Interaction

This model examines the relationship between standardized vaccination status (`zVacc`) and both standardized age (`zAge`) and gender. No interaction effect between age and gender is included.

```{r}
# Setting prior distributions for model parameters
priors_multiple <- c(
  set_prior("normal(0, 0.1)",  class = "Intercept"),  # Prior for intercept
  set_prior("normal(0, 1)", class = "b")             # Prior for coefficients
)

# Fitting the Bayesian regression model
fit_multiple <- brm(
  formula = zVacc ~ zAge + gender,  # Model without interaction
  data = vacc,
  prior = priors_multiple,
  save_pars = save_pars(all = TRUE)
)
```

### Fitting a Model With an Interaction

This model extends the previous one by adding an interaction term between age and gender. The interaction term allows us to examine whether the effect of age on vaccination status differs by gender.

```{r}
priors_interaction <- c(
  set_prior("normal(0, 0.1)",  class = "Intercept"),
  set_prior("normal(0, 1)", class = "b")
)

fit_interaction <- brm(
  formula = zVacc ~ zAge + gender + zAge:gender,  # Model with interaction
  data = vacc,
  prior = priors_interaction,
  save_pars = save_pars(all = TRUE)
)
```

### Comparing Model Fits Using R-Squared

The Bayesian R-squared (`bayes_R2`) measures how well each model explains the variance in the response variable. Higher values indicate better model fit.

```{r}
bayes_R2(fit_multiple)    # R-squared for model without interaction
bayes_R2(fit_interaction) # R-squared for model with interaction
```

### Comparing Model Fits Using Bayes Factor

The Bayes factor compares two models by quantifying how much more likely one model is compared to the other given the data. A higher Bayes factor suggests stronger evidence for one model over the other.

```{r}
bayes_factor(fit_multiple, fit_interaction)
```

### Comparing Model Fits Using Leave-One-Out Information Criterion (LOOIC)

LOOIC is a metric for comparing predictive accuracy while penalizing model complexity. Lower LOOIC values indicate a better balance between fit and simplicity.

```{r}
# Compute LOOIC for each model
(loo_multiple <- loo(fit_multiple))    # Model without interaction
(loo_interaction <- loo(fit_interaction))  # Model with interaction
```

We compare the expected log predictive density (elpd) values. A difference of at least twice the standard error (SE) is needed to indicate a substantial improvement in fit.

```{r}
loo_compare(loo_multiple, loo_interaction)
```

### Model Averaging

Instead of selecting a single best model, we can compute model weights to reflect how much each model should contribute to predictions.

```{r}
loo_model_weights(fit_multiple, fit_interaction)  # Compute model weights
```

To account for uncertainty in model selection, we compute average values of regression coefficients across models.

```{r}
posterior_average(fit_multiple, fit_interaction) # Compute average coefficients
```

Finally, we summarize the posterior distributions of the matched regression coefficients.

```{r}
posterior_average(fit_multiple, fit_interaction) %>% 
  describe_posterior()
```
