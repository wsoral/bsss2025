---
title: "Markov chain Monte Carlo"
format:
  revealjs:
    theme: solarized
editor: visual
---

```{r}
library(tidyverse)
library(bayesplot)
theme_set(theme_classic())
```

## Finding denominator of Bayes theorem

- Obtaining the posterior distribution requires finding the value of denominator. 
- The solution of integration is a value which is use to normalize the posterior distribution.

$$
P(\theta | \mathcal{D}) = \frac{P(\mathcal{D} | \theta)\times P(\mathcal{D} | \theta)}{\int{P(\mathcal{D} | \theta)\times P(\mathcal{D} | \theta)}d\theta}
$$

## Function

```{r}
tibble(x = seq(-4, 4, length.out = 100)) %>% 
  ggplot(aes(x = x))+
  stat_function(fun=dnorm, size=1.1)+
  labs(x=expression(theta), y=expression("P("~theta~")"))
```

## Finding area under function

```{r}
tibble(x = seq(-4, 4, length.out = 100)) %>% 
  ggplot(aes(x = x))+
  stat_function(fun=dnorm, geom="polygon", colour="black", fill="lightblue", size=1.1)+
  labs(x=expression(theta), y=expression("P("~theta~")"))
```


## Approximating area under function 

```{r}
rectangle <- 
  tibble(x = c(-4, 4, 4, -4),
         y = c(0, 0, 0.4, 0.4))

tibble(x = seq(-4, 4, length.out = 100)) %>% 
  ggplot(aes(x = x))+
  stat_function(fun=dnorm, size=1.1)+
  labs(x=expression(theta), y=expression("P("~theta~")"))+
  geom_polygon(mapping = aes(x=x, y=y), data=rectangle, colour="red", fill=NA, linetype =2)
```

## Approximating area under function

```{r}
sims <- tibble(
  x_sim = runif(5000, -4, 4),
  y_sim = runif(5000, 0, 0.4)
  ) %>% 
  mutate(accept = ifelse(y_sim <= dnorm(x_sim), "yes", "no"))

tibble(x = seq(-4, 4, length.out = 100)) %>% 
  ggplot(aes(x = x))+
  stat_function(fun=dnorm, size=1.1)+
  labs(x=expression(theta), y=expression("P("~theta~")"))+
  geom_polygon(mapping = aes(x=x, y=y), data=rectangle, colour="red", fill=NA, linetype =2)+
  geom_point(aes(x=x_sim, y=y_sim), data=sims, alpha=.7)
```

## Approximating area under function

```{r}
tibble(x = seq(-4, 4, length.out = 100)) %>% 
  ggplot(aes(x = x))+
  stat_function(fun=dnorm, size=1.1)+
  labs(x=expression(theta), y=expression("P("~theta~")"))+
  geom_polygon(mapping = aes(x=x, y=y), data=rectangle, colour="red", fill=NA, linetype =2)+
  geom_point(aes(x=x_sim, y=y_sim, colour=accept), data=sims, alpha=0.7)+
  guides(colour="none")
```

## Approximating area under function

Accepted values of x have Normal distribution.

```{r}
sims %>% 
  filter(accept=="yes") %>% 
  ggplot(aes(sample=x_sim))+
  stat_qq(alpha = 0.4)+
  stat_qq_line()
```



## Markov chain Monte Carlo

-   MCMC involves a number of algorithms based on a similar idea:
    -   Metropolis, Metropolis-Hastings, Gibbs
    -   Hamiltonian Monte Carlo, NUTS
-   Its aim is to sample from a complex and high-dimensional probability distribution...
-   By repeatedly generating a new sample from a proposal distribution, and accepting or rejecting it based on a certain acceptance probability

## Markov chain Monte Carlo

```{r}
library(bayesplot)
x <- example_mcmc_draws(1, 1)
mcmc_trace(x)+
  ggtitle("A traceplot of 250 draws from a posterior distribution")
```


## Markov chain Monte Carlo

```{r}
mcmc_hist(x)+
  ggtitle("A histogram of 250 draws from a posterior distribution")
```


## Markov chain Monte Carlo

```{r}
mcmc_dens(x)+
  ggtitle("A density plot of 250 draws from a posterior distribution")
```


# Describing posterior distribution

## Centrality - mean

```{r}
mcmc_dens(x)+
  geom_vline(xintercept = -21.06, colour="red")+
  ggtitle("A density plot of 250 draws from a posterior distribution",
          subtitle = "with the red line denoting posterior mean")
```

## Centrality - MAP estimate

```{r}
mcmc_dens(x)+
  geom_vline(xintercept = -24.17, colour="green")+
  ggtitle("A density plot of 250 draws from a posterior distribution",
          subtitle = "with the green line denoting maximum a posteriori probability (MAP) estimate")
```

## Centrality - median

```{r}
mcmc_dens(x)+
  geom_vline(xintercept = -22.14, colour="blue")+
  ggtitle("A density plot of 250 draws from a posterior distribution",
          subtitle = "with the green line denoting median")
```

## Uncertainty - credible intervals

```{r}
mcmc_dens(x)+
  geom_polygon(data=tibble(Value=c(-46.58, 10.13, 10.13, -46.58), y=c(0,0,0.029,0.029)), aes(y=y), fill="yellow", alpha=1/3)+
  ggtitle("A density plot of 250 draws from a posterior distribution",
          subtitle = "with the yellow are denoting equal-tailed 95% credible interval [-46.58, 10.13]")
```

## Uncertainty - highest density intervals

```{r}
mcmc_dens(x)+
  geom_polygon(data=tibble(Value=c(-46.70, 10.31, 10.31, -46.70), y=c(0,0,0.029,0.029)), aes(y=y), fill="cyan", alpha=1/3)+
  ggtitle("A density plot of 250 draws from a posterior distribution",
          subtitle = "with the cyan area denoting 95% highest density interval [-46.70, 10.31]")
```

## Uncertainty - highest density intervals

```{r}
mcmc_dens(rbind(x, x+100))+
  geom_polygon(data=tibble(Value=c(-56.89950 , 15.1946, 15.1946, -56.89950), y=c(0,0,0.0104,0.0104)), aes(y=y), fill="cyan", alpha=1/3)+
  geom_polygon(data=tibble(Value=c(42.59036 , 115.0449, 115.0449, 42.59036), y=c(0,0,0.0104,0.0104)), aes(y=y), fill="cyan", alpha=1/3)+
  ggtitle("A density plot of 500 draws from a posterior distribution",
          subtitle = "with the cyan areas denoting 95% highest density interval [-56.90, 15.19; 42.59, 115.05]")
```

## Existence - $P_{D}$

```{r}
library(bayestestR)
p_significance(x) %>% 
  plot()
```

-   Probability of Direction: 0.93

## Existence - $P_{D}$

::: nonincremental
-   pd \<= 95%: uncertain
-   pd \> 95%: possibly existing
-   pd \> 97%: likely existing
-   pd \> 99%: probably existing
-   pd \> 99.9%: certainly existing
:::

## Significance - $ROPE$

```{r}
rope(x, range=c(-10,10)) %>% 
  plot()+
  theme_classic()
```

-   Proportion of samples inside ROPE: 22.88%

## Significance - $ROPE$

::: nonincremental
-   more than 99% in ROPE: negligible (we can accept the null hypothesis)
-   less than 97.5% in ROPE: probably negligible
-   \<=97.5% & \>= 2.5% in ROPE: undecided significance
-   \<2.5% in ROPE: probably significant
-   \<1% in ROPE: significant (we can reject the null hypothesis)
:::


